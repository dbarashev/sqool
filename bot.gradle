buildscript {
	ext {
		kotlinVersion = '1.9.0'
	}
	repositories {
		google()
		mavenCentral()
	}
	dependencies {
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}
plugins {
	id 'com.google.cloud.tools.jib' version '3.3.1'
	id "nu.studer.jooq" version "8.0"
}

apply plugin: 'application'
apply plugin: 'kotlin'

ext {
	buildMode = findProperty('buildMode') ?: 'development'
}
repositories {
	mavenLocal()
	mavenCentral()
}

mainClassName = 'com.bardsoftware.sqool.bot.SQoolBotKt'

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
	implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

	implementation "com.bardsoftware:libbotanique:1.+"
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.+"
	implementation "org.postgresql:postgresql:42.+"
	implementation 'com.zaxxer:HikariCP:5.+'
	implementation "org.jooq:jooq:3.+"
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation "com.michael-bull.kotlin-result:kotlin-result:1.1.16"
	implementation "io.ktor:ktor-client-core:2.3.4"
	implementation "io.ktor:ktor-client-cio:2.3.4"
	implementation "com.github.ajalt.clikt:clikt:4.2.0"
	jooqGenerator 'org.jooq:jooq-meta-extensions'

}

sourceSets {
	main {
		kotlin {
			srcDirs += "$buildDir/generated-src/jooq/main"
			include "**/bot/*.kt", "**/bot/db/**"
		}
	}
	test {
		kotlin {
			exclude "**/*.kt"
		}
	}
}

compileKotlin {
	kotlinOptions.jvmTarget = "17"
}

jooq {
	configurations {
		main {
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				generator {
					name = 'org.jooq.codegen.KotlinGenerator'
					database {
						name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
						properties {
							property {
								key = 'scripts'
								value = 'src/main/kotlin/com/bardsoftware/sqool/bot/bot.sql'
							}
							property {
								key = 'defaultNameCase'
								value = 'lower'
							}
						}
					}
					target {
						packageName = "com.bardsoftware.sqool.bot.db"
					}
				}
			}
		}
	}
}

tasks.compileKotlin.dependsOn(tasks.generateJooq)
jib {
	to.image = 'dbarashev/sqool-bot'
	from.image = 'eclipse-temurin:17'
	container.ports = ["8080"]
}

application {
	applicationDefaultJvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"]
}
